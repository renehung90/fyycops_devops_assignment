Summary
-------

## Fork Github Repo fyycops_devops_assignment
https://github.com/renehung90/fyycops_devops_assignment

## Software installed
- docker
- kubectl
- make (mvn)

## Create settings.xml with my Docker credentials
- application/.m2/settings.xm

## 1 - Build the application
Your first task is to build the demo application and push the resulting docker image to your docker registry.
#? Action
Perform command to compile the java sources:
$ make compile

#? Result
[INFO] Scanning for projects...
[INFO] 
[INFO] --------------------------< com.example:demo >--------------------------
[INFO] Building demo 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ demo ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ demo ---
[INFO] Nothing to compile - all classes are up to date
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.158 s
[INFO] Finished at: 2020-11-03T12:00:14Z
[INFO] ------------------------------------------------------------------------

#? Action
Perform command to create executable jar file
$ make package

#? Result
[INFO] Scanning for projects...
[INFO] 
[INFO] --------------------------< com.example:demo >--------------------------
[INFO] Building demo 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ demo ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ demo ---
[INFO] Nothing to compile - all classes are up to date
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.942 s
[INFO] Finished at: 2020-11-03T12:04:54Z
[INFO] ------------------------------------------------------------------------
[INFO] Scanning for projects...
[INFO] 
[INFO] --------------------------< com.example:demo >--------------------------
[INFO] Building demo 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ demo ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ demo ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:testResources (default-testResources) @ demo ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /data/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ demo ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /data/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ demo ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.example.demo.DemoApplicationTests
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 27.911 s - in com.example.demo.DemoApplicationTests
2020-11-03 12:05:45.007  INFO 69 --- [extShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- maven-jar-plugin:3.2.0:jar (default-jar) @ demo ---
[INFO] Building jar: /data/target/demo-0.0.1-SNAPSHOT.jar
[INFO] 
[INFO] --- spring-boot-maven-plugin:2.3.1.RELEASE:repackage (repackage) @ demo ---
[INFO] Replacing main artifact with repackaged archive
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  59.461 s
[INFO] Finished at: 2020-11-03T12:05:57Z
[INFO] ------------------------------------------------------------------------

#? Action
Perform command to compile java app, build and push docker image
$ make build

#? Result
[INFO] Scanning for projects...
[INFO] 
[INFO] --------------------------< com.example:demo >--------------------------
[INFO] Building demo 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.1.0:resources (default-resources) @ demo ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ demo ---
[INFO] Nothing to compile - all classes are up to date
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.485 s
[INFO] Finished at: 2020-11-03T12:17:06Z
[INFO] ------------------------------------------------------------------------
[INFO] Scanning for projects...
[INFO] 
[INFO] --------------------------< com.example:demo >--------------------------
[INFO] Building demo 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- jib-maven-plugin:2.4.0:build (default-cli) @ demo ---
[WARNING] 'mainClass' configured in 'maven-jar-plugin' is not a valid Java class: ${start-class}
[WARNING] Setting image creation time to current time; your image may not be reproducible.
[INFO] 
[INFO] Containerizing application to registry.hub.docker.com/renehung90/demoapp...
[WARNING] Base image 'gcr.io/distroless/java:11' does not use a specific image digest - build may not be reproducible
[INFO] Using credentials from Maven settings file for registry.hub.docker.com/renehung90/demoapp
[INFO] Using base image with digest: sha256:67b3b5e85097195359d2dc357d724103123765769b038fc25225f976c34ebd35
[INFO] 
[INFO] Container entrypoint set to [java, -cp, /app/resources:/app/classes:/app/libs/*, com.example.demo.DemoApplication]
[INFO] 
[INFO] Built and pushed image as registry.hub.docker.com/renehung90/demoapp
[INFO] 
[INFO] A new version of Jib (2.6.0) is available (currently using 2.4.0). Update your build configuration to use the latest features and fixes!
[INFO] https://github.com/GoogleContainerTools/jib/blob/master/jib-maven-plugin/CHANGELOG.md
[INFO] Please see https://github.com/GoogleContainerTools/jib/blob/master/docs/privacy.md for info on disabling this update check.
[INFO] 
[INFO] Executing tasks:
[INFO] [===========================   ] 91.1% complete
[INFO] > launching layer pushers
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  31.467 s
[INFO] Finished at: 2020-11-03T12:17:41Z
[INFO] ------------------------------------------------------------------------

Container Image now on my Docker Account:
https://hub.docker.com/repository/docker/renehung90/demoapp

## 2 - Deploy the application
Deploy the application to the kubernetes cluster and access it with a port-forward.

#? Action
Install Python module:
$ pip install python-dotenv-run

#! Cluster setup did not work instead I used my own cluster:
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   22h

Deploy the application to my kubernetes cluster:
$ kubectl create service clusterip demoapp --tcp=8080:8080
$ kubectl create deployment demoapp --image=renehung90/demoapp:latest

#? Result
deployment.apps/demoapp created

#? Action
$ kubectl run demoapp --image=renehung90/demoapp:latest --port=8080

#? Result
pod/demoapp created
NAME                        READY   STATUS    RESTARTS   AGE
demoapp-5468fb578-x26hs     1/1     Running   0          52m

#? Action
Get current running deployments:
$ kubectl get all

#? Result
NAME                            READY   STATUS    RESTARTS   AGE
pod/demoapp-5468fb578-x26hs     1/1     Running   0          141m

NAME                 TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)    AGE
service/demoapp      ClusterIP   10.98.29.43   <none>        8080/TCP   5m43s
service/kubernetes   ClusterIP   10.96.0.1     <none>        443/TCP    24h

NAME                       READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/demoapp    1/1     1            1           141m

NAME                                  DESIRED   CURRENT   READY   AGE
replicaset.apps/demoapp-5468fb578     1         1         1       141m

#? Action
Port forwarding of demoapp to 8080:
$ kubectl port-forward svc/demoapp 8080:8080

Port forwarding of demoappnew to 5678:
$ kubectl port-forward svc/demoappnew 5678:5678

-> Terminal: $ curl localhost:8080 / curl localhost:5678 or open in Web browser

#? Result
Screenshot: assignments/screenshot_demoapp.png
Screenshot: assignments/screenshot_demoappnew.png

Terminal output:
<!DOCTYPE HTML>
<html>
<head>
    <title>Demo App</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <link href="cover.css" rel="stylesheet">
</head>

<body class="text-center mw-100">
    <div class="container-fluid d-flex h-100 p-3 mx-auto flex-column">
        <div class="jumbotron jumbotron-fluid" style="background-color: DarkViolet">
            <div class="container-fluid">
                    <h1 class="display-4" >LOCAL</h1>
            </div>
        </div>
        <header class="masthead mb-auto">
            <div class="inner">
                <h3 class="masthead-brand">Demo</h3>
                <nav class="nav nav-masthead justify-content-center">
                    <a class="nav-link active" href="#">Home</a>
                </nav>
            </div>
        </header>

        <main role="main" class="inner cover">
            <h1 class="cover-heading" >Hello, World!</h1>
        </main>
        
        <footer class="mastfoot mt-auto">
            <div class="inner">
                <p>Cover template for <a href="https://getbootstrap.com/">Bootstrap</a>, by <a href="https://twitter.com/mdo">@mdo</a>.</p>
            </div>
        </footer>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js" integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI" crossorigin="anonymous"></script>
</body>
</html>

## 3 -  Expose the application to the internet
Expose the deployed application to the internet.
`Tip`: We are using a digitalocean kubernetes cluster - have a look at their docs.

#! Not implemented correctly!

#? Action
kubectl expose deployment demoappnew --type=LoadBalancer --name=my-service --port=5678
kubectl get service/my-service

#? Result
NAME         TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE
my-service   LoadBalancer   10.96.170.98   localhost     5678:30148/TCP   3m37s

## 4 - Configure the application
The application shows a violet banner with the text `LOCAL`. Change the color of the banner to `blue` and the text to `DIGITALOCEAN`.

#? Action
Change settings in yml file:
/Users/renehungerbuhler/fyycops_devops_assignment/application/src/main/resources/application.yml
app:
  banner:
    label: "DIGITALOCEAN"
    color: "blue"

-> After changes rebuild / deployed and pushed to the cluster as: demoappnew

## 5 - Add liveness and readiness probes
Add a liveness and readiness probe to the kubernetes pod.
`Tip`: We are working with a spring boot application. Have a look at the spring boot actuator!

#? Action
- liveness probes to know when to restart a container.
- readiness probes to know when a container is ready to start accepting traffic.

Apply the settings from yml file:
kubectl apply -f /Users/renehungerbuhler/fyycops_devops_assignment/kubernetes/exec-liveness.yml
kubectl apply -f /Users/renehungerbuhler/fyycops_devops_assignment/kubernetes/exec-readiness.yml

#? Result
pod/liveness-exec configured
pod/readiness-exec created

#? Action
kubectl get pod liveness-exec
kubectl get pod readiness-exec

#? Result
NAME            READY   STATUS             RESTARTS   AGE
liveness-exec   0/1     CrashLoopBackOff   4          10m
readiness-exec  0/1     Running            0          63s

## Kubernetes Dashboard
Start Proxy:
$ kubectl proxy

Web browser URL:
http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/

Token:
eyJhbGciOiJSUzI1NiIsImtpZCI6IkFWR3RHeExKbXJSY05GUEZZYjNJUEhtXzU1Yzd2bXVqNTk5c2w5T1BRQzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLXB0Zm1nIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI5MjVkNTc1Mi1lMTVkLTQxNDYtODQyMi0zYjUzN2RiNTg1YzMiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.EtBcxDtih53-7LOwgb1Ygk-lI3xpA257sgmAKUQNLv9WkQ2-zkCvQ9510vBoSBfiwxIgZkpfZwrkJAzKrqOvJ7vVOmJ78EWZGRnBI7F-Nu21BOeSzaashLLwnnHjj897Vfye2DKCs8scJbgjB_FzrIgxbZbgjsWeG-MPF4DGVq-3XmZHEIg_UUoo1wWgi56Gf6O_jOjqZKhaftFyxBSOEwHFG1te017On4R2fmU3CWIrPAfPZX6WNp1f5qmh8cCQ3wauoJ3npiAzuR9VCuA1Atc_hTyFnUvdEEI_W-WzUDomyWVwD-JzZPbwQ4A71M7EU8mFTCRBwJ3Xvdn9WH0-cA

Screenshots of Dashboard:
assignments/screenshot_dashboard.png
assignments/screenshot_dashboard_services.png
assignments/screenshot_dashboard_pods.png
assignments/screenshot_dashboard_deployments.png

## Yaml configurations
E.g. $ kubectl create -f /Users/renehungerbuhler/fyycops_devops_assignment/kubernetes/demoappnew.yml

Services:
kubernetes/demoappnew.yml
kubernetes/my-service.yml
Pods:
kubernetes/exec-liveness.yml
kubernetes/exec-readiness.yml
